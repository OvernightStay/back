services:
  db:
    image: postgres:14
    container_name: back_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"

  web:
    build:
      context: .
      dockerfile: ./pro/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        EMAIL_HOST: ${EMAIL_HOST}
        EMAIL_PORT: ${EMAIL_PORT}
        EMAIL_HOST_USER: ${EMAIL_HOST_USER}
        EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
        DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
    container_name: back_web
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./pro:/app:rw
      - static_volume:/static
      - ./pro/media:/media
    expose:
      - "8000"
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "pro.wsgi:application"]

  frontend:
    image: node:18-alpine
    container_name: front_web
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    command: ["npm", "start"]

  nginx:
    image: nginx:1.23-alpine
    container_name: back_nginx
    depends_on:
      - web
      - frontend
    ports:
      - "80:80"
    volumes:
      - static_volume:/static
      - ./pro/media:/media:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/servers:/etc/nginx/servers:ro
    restart: always

volumes:
  postgres_data:
  static_volume:
